#Python code (using OpenCV for eye detection):

import cv2

# Initialize the webcam
cap = cv2.VideoCapture(0)

# Load the cascade for detecting eyes
eye_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_eye.xml')

# Main loop
while True:
    # Capture frame-by-frame
    ret, frame = cap.read()

    # Convert frame to grayscale
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect eyes in the frame
    eyes = eye_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5)

    # Draw rectangles around the eyes
    for (ex, ey, ew, eh) in eyes:
        cv2.rectangle(frame, (ex, ey), (ex + ew, ey + eh), (0, 255, 0), 2)
        
        # Assuming you have one eye in the frame, you can send a signal to Arduino
        # whenever an eye is detected. You might need more sophisticated logic
        # for more precise control.

    # Display the resulting frame
    cv2.imshow('frame', frame)

    # Exit if 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the capture
cap.release()
cv2.destroyAllWindows()




#Arduino code (receiving signal from Python and controlling the engine):

const int enginePin = 9; // Define the pin for controlling the engine

void setup() {
  pinMode(enginePin, OUTPUT);
  Serial.begin(9600); // Initialize serial communication
}

void loop() {
  if (Serial.available() > 0) {
    char receivedChar = Serial.read();
    
    // If '1' is received, turn on the engine
    if (receivedChar == '1') {
      digitalWrite(enginePin, HIGH);
    }
    
    // If '0' is received, turn off the engine
    else if (receivedChar == '0') {
      digitalWrite(enginePin, LOW);
    }
  }
}




